plugins {
    id 'com.github.johnrengelman.shadow'
}

loom {
    forge {
//        mixinConfig "createdynlight.mixins.json"
    }

    runs {
        client {
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
        }
    }
}

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

dependencies {
    forge "net.minecraftforge:forge:$rootProject.forge_version"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionForge')
    modImplementation ("com.simibubi.create:create-${minecraft_version}:${create_version}:slim") { transitive = false }
    modImplementation ("com.jozufozu.flywheel:flywheel-forge-${flywheel_minecraft_version}:${flywheel_forge_version}")
    modImplementation ("com.tterrag.registrate:Registrate:${registrate_version}")
    modImplementation "curse.maven:dynamiclights-reforged-551736:${dynamiclights_curseforge_id}"

    forgeRuntimeLibrary ('org.anarres:jcpp:1.4.14')
    modLocalRuntime ("org.embeddedt:embeddium-${minecraft_version}:${embeddium_version}+mc${minecraft_version}")
    modLocalRuntime ("maven.modrinth:oculus:${oculus_version}")
    modLocalRuntime ("com.simibubi.create:create-${minecraft_version}:${create_version}:slim") { transitive = false }

//    modLocalRuntime("maven.modrinth:create-contraption-terminals:1.20.1-1.0.0")
//    modLocalRuntime("maven.modrinth:toms-storage:1.20-1.6.8")
    //modLocalRuntime ("com.simibubi.create:create-${create_minecraft_version}:${create_version}:slim")
}

processResources {
    inputs.property 'version', mod_version

    filesMatching('META-INF/mods.toml') {
        expand version: mod_version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}
