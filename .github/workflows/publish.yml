# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Publish Jar

on:
  workflow_dispatch:
    inputs:
      mc_version:
        description: 'Minecraft Version'
        required: true
        type: 'string'
        default: '1.21.1'
      mod_version:
        description: 'Mod Version'
        required: true
        type: 'string'
        default: '2.0.0'
      version_type:
        description: 'Version Type'
        required: true
        type: 'choice'
        options:
          - 'alpha'
          - 'beta'
          - 'release'
        default: 'beta'
      publish_to_curseforge:
        description: 'Publish to CurseForge'
        required: true
        type: 'boolean'
        default: false
      publish_to_modrinth:
        description: 'Publish to Modrinth'
        required: true
        type: 'boolean'
        default: false
      publish_github_release:
        description: 'Publish GitHub Release'
        required: true
        type: 'boolean'
        default: true

env:
  JAVA_VERSION: 21
  VERSION_TITLE: "${{inputs.mc_version}}+${{inputs.mod_version}}-${{inputs.version_type}}"

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
      - name: Check Environment Variables
        run: env

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Make Gradle Wrapper Executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build
        run: ./gradlew build -Pmod_version=${{inputs.mod_version}}

      - name: Publish NeoForge GitHub Release
        if: ${{ inputs.publish_github_release == true }}
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          github-token: "${{secrets.PUBLISH_TOKEN}}"

          name: "NeoForge ${{ENV.VERSION_TITLE}}"
          changelog-file: CHANGELOG.md
          files: build/libs/!(*-dev|*-sources|*-javadoc|*-shadow).jar
          version-type: ${{inputs.version_type}}
          version: "neoforge-${{inputs.mod_version}}"

          fail-mode: warn

      - name: Publish NeoForge CurseForge
        if: ${{ inputs.publish_to_curseforge == true }}
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          curseforge-id: "${{vars.CURSEFORGE_ID}}"
          curseforge-token: "${{secrets.CURSEFORGE_TOKEN}}"

          name: "NeoForge ${{ENV.VERSION_TITLE}}"
          changelog-file: CHANGELOG.md
          files: build/libs/!(*-dev|*-sources|*-javadoc|*-shadow).jar
          version-type: ${{inputs.version_type}}
          version: "neoforge-${{inputs.mod_version}}"

          fail-mode: warn


      - name: Publish NeoForge Modrinth
        if: ${{ inputs.publish_to_modrinth == true }}
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          modrinth-id: "${{vars.MODRINTH_ID}}"
          modrinth-token: "${{secrets.MODRINTH_TOKEN}}"

          name: "NeoForge ${{ENV.VERSION_TITLE}}"
          changelog-file: CHANGELOG.md
          files: build/libs/!(*-dev|*-sources|*-javadoc|*-shadow).jar
          version-type: ${{inputs.version_type}}
          version: "neoforge-${{inputs.mod_version}}"

          fail-mode: warn